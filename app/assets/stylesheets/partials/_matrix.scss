@import "partials/variables";
@import "partials/mixins-base";
@import "partials/mixins-project";
@import "partials/patterns";

// Matrix
// --------------------------------------------------------
// Patterns
// --------------------------
// A unit that is one cell-width (any height)
%matrix--wide {
  width: $matrixCellWidth - .5rem;
}

// A unit that is one cell-height (any width)
%matrix--tall {
  height: 6.8rem;
  .editable & {
    height: 13.6rem;
  }
  .compact & {
    height: 5.8rem;
  }
}

// TODO hide right border
%matrix--slider {
  // width: $matrixOverlayWidth - 0.1rem;
  width: $matrixOverlayWidth;
  // margin-right: 0.1rem;
  overflow-x: hidden;
  ul {
    //    @include transition(0.3s left ease-in-out);
    position: relative;
  }
}

// Components
// --------------------------
.matrix--delete {
  @extend %no-select;
  @extend %bare-ex-link;
  vertical-align: top;
  margin-left: 0.6rem;
  cursor: pointer;
  .compact .matrix--column-header--link & {
    margin: -1.6rem 0 0 0;
    position: absolute;
    top: 50%;
    right: 1rem;
  }
}

// Column header
// ------------
.matrix--column-header {
  @extend %shaded-bottom;
  width: $mainWidth;
  height: $subHeaderHeight;
  border-top: 0.1rem solid $tealLighter;
  position: absolute;
  z-index: 300;
  &.stuck {
    position: fixed;
    top: 0;
  }
}

// Wraps .matrix--column-header--list
.matrix--list-wrapper {
  @extend %matrix--slider;
  background-color: $tealLightestAlt;
  float: left;
  position: relative;
  z-index: 310;
  .matrix--overlay-open & {
    background-color: $tealLighter;
  }
}

.matrix--column-header--list {
  @extend %clearfix;
  @extend %floated-list;
  height: $subHeaderHeight;
  margin: 0;
  overflow: hidden;
  li {
    @extend %matrix--wide;
    height: 100%;
    border-right: 0.1rem solid $beigeDark;
    .editable & {
      display: table;
    }
  }
}

%matrix--column-header--item {
  @extend %mega;
  text-transform: uppercase;
  @include font-head;
  color: $tealMedium;
  line-height: 1;
  overflow: hidden;
}

.matrix--column-header--link {
  @extend %matrix--column-header--item;
  @extend %bare-link;
  @extend %box-link;
  padding: 1.4rem 1.6rem;
  // The span hides any column header text that exceeds it's height. Scott, perhaps there is a better way to set this height?
  span {
    display: block;
    height: 5.5rem;
    overflow: hidden;
    .compact & {
      @extend %truncated;
      height: 2.7rem;
      margin: 1.25rem 0;
    }
  }
  .compact & {
    padding-right: 4rem;
    position: relative;
  }
}

// NB only use this on 'editable' matrices
.matrix--column-header--editor {
  @extend %matrix--column-header--item;
  display: table-cell;
  vertical-align: middle;
  width: 100%;
  padding: 0 1.6rem;
}

.matrix--column-header--input {
  @extend %medium-text-input;
  display: inline-block;
  width: 18.5rem;
  margin-bottom: 0;
}

.matrix--controls {
  @extend %clearfix;
  @extend %shaded-inside-right;
  width: $matrixRowHeaderWidth;
  height: $subHeaderHeight;
  background-color: $tealLightestAlt;
  padding: 2.1rem 3.2rem 1.7rem 1.6rem;
  float: left;
  position: relative;
  z-index: 310;
}

%matrix--controls--item {
  @extend %no-select;
  @extend %bare-focus;
  @extend %hidden-text;
  display: block;
  width: 4.2rem;
  height: 4.2rem;
  float: right;
  &.inactive {
    @extend %inactive-link;
    @include opacity(25);
  }
  .matrix--overlay-open & {
    visibility: hidden;
  }
  @include newIE {
    width: 4.4rem;
    height: 4.4rem;
  }
}

.matrix--previous {
  @extend %matrix--controls--item;
  @include svg(arrow-left-teal);
}

.matrix--next {
  @extend %matrix--controls--item;
  @include svg(arrow-right-teal);
  margin-left: 1.1rem;
}

// Overlay header
// ------------
// Lives inside .matrix--column-header
.matrix--overlay-header {
  width: $mainWidth;
  background-color: $tealLightestAlt;
  padding: 1.6rem 3.2rem 1.6rem 2.4rem;
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 320;
}

.matrix--overlay-header-close {
  @extend %hidden-text;
  @include svg(circle-x);
  display: block;
  width: 2rem;
  height: 2rem;
  margin: 1.4rem 0;
  float: left;
  @include newIE {
    width: 2.4rem;
    height: 2.4rem;
  }
}

// Wraps .matrix--overlay-header-title & .matrix--overlay-header-subtitle
.matrix--overlay-header-wrapper {
}

.matrix--overlay-header-title {
  @extend %alpha;
  vertical-align: top;
  color: $grayDark;
  font-weight: $bold;
  margin: 1.1rem 1.2rem;
  float: left;
}

.matrix--overlay-header-subtitle {
  cursor: pointer;
  @extend %alpha;
  @extend %truncated;
  @include font-head;
  vertical-align: top;
  text-transform: uppercase;
  color: $tealMedium;
  line-height: 1;
  padding: 0.7rem 0 0.3rem 1.2rem;
  border-left: 0.1rem solid $tealMedium;
  margin: 0.8rem 0;
}


.matrix--overlay-header-selector-inline {
  & .matrix--overlay-header-subtitle,
  & .matrix--overlay-header-title {
    @include svg(arrow-down-gray);
    background-size: 1.6rem 1.6rem;
    background-position: right center;
    padding-right: 2.3rem;
  }
}

.matrix--overlay-header-selector {
  position: absolute;
  top: 2.4rem;
  right: 3.2rem;
}

.matrix--overlay-header-selector-inline {
  float: left;
  position: relative;
}

// Row header
// ------------
// Wraps .matrix--row-header
.matrix--name-nav {
  width: $matrixRowHeaderWidth;
  padding-top: $subHeaderHeight;
  position: absolute;
  left: 0;
  z-index: 150;
  &.stuck {
    position: fixed;
    margin: 0 auto;
    top: 11.6rem;
    left: auto;
  }
}


.matrix--row-header {
  position: relative;
  top: 0;
  ul {
    @extend %clearfix;
    @extend %unstyled-list;
    width: $matrixRowHeaderWidth;
    margin: 0;
  }
  li {
    @extend %matrix--tall;
    @extend %shaded-inside-right;
    @include transition(0.25s opacity ease-out);
    display: table;
    width: 100%;
    background-color: $beigeAlt;
    &:nth-child(even) {
      background-color: $beigeLightAlt;
    }
    &.matrix--group-title {
      background-color: #deedf4;
      &:nth-child(even) {
        background-color: #eaf3f8;
      }
      &.first {
        @extend %shaded-inside-top-right;
      }
      &:hover,
      &.active {
        background-color: $grayDarker;
      }
      .matrix--overlay-open & {
        background-color: mix($tealLightestAlt, black, 82%);
        &:nth-child(even) {
          background-color: mix(#d7dcdd, black, 82%);
        }
      }
    }
    &.matrix--row-spacer {
      &:hover {
        background-color: $beigeAlt !important;
      }
      &:nth-child(even) {
        &:hover {
          background-color: $beigeLightAlt !important;
        }
      }
    }
    .highlightable & {
      &:hover,
      &.selected,
      &.active {
        background-color: $grayDarker;
        a {
          color: $orange;
        }
      }
    }
    .matrix--overlay-open & {
      @include transition(0);
      @include opacity(50);
      &:hover,
      &.active {
        @include opacity(100);
      }
    }
  }
}

.matrix--row-header--item {
  display: table;
  width: 100%;
  height: 100%;
  a {
    @extend %beta;
    @extend %bare-focus;
    @extend %bare-link;
    display: table-cell;
    vertical-align: middle;
    width: $matrixCellWidth;
    height: 6.8rem;
    font-weight: $bold;
    color: $tealMedium;
    padding: 0 1.6rem;
    .compact & {
      height: auto;
    }
  }
  .range-label {
    width: 18.2rem;
    height: 5.4rem;
    padding-top: 1rem;
    padding-left: 1rem;
    float: left;
    overflow-x: hidden;
    a {
      height: auto;
      padding: 0;
    }
    strong {
      @extend %delta;
      color: $grayDark;
    }
    @include newIE {
      overflow: hidden;
    }
  }
  .range-destroy {
    width: 4rem;
    padding-top: 1rem;
    padding-right: 0rem;
    float: left;
    .matrix--delete {
      float: right;
    }
  }
  .editable & {
    display: table-cell;
    vertical-align: middle;
    padding: 0 2rem;
  }
}

.matrix--row-header--input {
  @extend %medium-text-input;
  display: inline-block;
  width: 12.2rem;
}

.matrix--row-header--label {
  @extend %alpha;
}

.matrix--overlay-open {
  .matrix--row-spacer {
    &:nth-child(odd),
    &:nth-child(odd) li {
      &:hover,
      &.active {
        background-color: #c4c0c0 !important;
      }
    }
    &:nth-child(even),
    &:nth-child(even) li {
      &:hover,
      &.active {
        background-color: #ccc8c8 !important;
      }
    }
    .matrix--cell {
      height: 100%;
    }
  }
}

// Content
// ------------
// Wraps .matrix--content
.matrix--body {
  @extend %clearfix;
  padding: $subHeaderHeight 0 0 ($matrixRowHeaderWidth);
  position: relative;
  border-bottom: 0.1rem solid transparentize($beigeDark, 0.1);
}

.matrix--content {
  @extend %matrix--slider;
  position: relative;
  z-index: 120;
}

// <ul>
.matrix--row {
  @extend %matrix--tall;
  @extend %floated-list;
  background-color: $beigeAlt;
  margin: 0;
  overflow-y: hidden;
  &:nth-child(even) {
    background-color: $beigeLightAlt;
  }
  &.matrix--group-row {
    background-color: #deedf4;
    &:nth-child(even) {
      background-color: #eaf3f8;
    }
    &.first {
      @extend %shaded-top;
    }
    &:hover,
    &.active {
      background-color: $grayDarker;
    }
  }
  &.matrix--row-spacer {
    &:hover {
      background-color: $beigeAlt !important;
    }
    &:nth-child(even) {
      &:hover {
        background-color: $beigeLightAlt !important;
      }
    }
    .matrix--cell {
      height: 100%;
    }
  }
  .highlightable & {
    &:hover,
    &.active {
      background-color: $grayDarker;
    }
  }
}

// <li> inside .matrix--row
.matrix--cell {
  @extend %matrix--wide;
  @extend %matrix--tall;
  padding: 1rem 0 1rem 1.6rem;
  border-right: 0.1rem solid transparentize($beigeDark, 0.1);
  cursor: pointer;
  a {
    display: block;
    float: left;
  }
  // Used on the rubric creation grid.
  p {
    margin: .6rem;
    @extend %delta;
    small {
      display: block;
      @extend %truncated;

    }
  }
  // Changes component colors on hover
  &:hover {
    .matrix--cell--play {
      @include svg(play-orange);
      &.inactive {
        @include svg(play-slash-orange);
      }
    }
    .matrix--cell--value {
      color: $orange;
    }
    .matrix--cell--indicator {
      color: $orange;
      b {
        @include svg(checkbox-unchecked-orange);
      }
      &.active {
        b {
          @include svg(checkbox-orange);
        }
      }
    }
  }
  .editable & {
    padding: 1.6rem;
  }
  .compact & {
    padding: 1rem;
  }
}

.matrix--cell--play {
  @extend %hidden-text;
  @include svg(play);
  display: block;
  width: 2.8rem;
  height: 2.8rem;
  margin: 1rem 0;
  float: left;
  // Changes play icon when no video exists
  &.inactive {
    @include opacity(25);
    @include svg(play-slash);
    .active & {
      @include opacity(100);
      @include svg(play-slash-beigeDark);
    }
  }
  // Changes icon color when .matrix--row is active (on hover)
  .active & {
    @include svg(play-beigeDark);
  }
}

.matrix--cell--thumb {
  @extend %hidden-text;
  display: block;
  width: 6rem;
  margin: 1rem 0;
  float: left;
}

.matrix--cell--value {
  @extend %mega-alt;
  @include font-head;
  width: 4.5rem;
  text-align: center;
  color: $tealMedium;
  padding: 0.4rem 0;
  margin: 0 .8rem;
  float: left;
  &.inactive {
    @include opacity(25);
  }
  small {
    font-size: 0.65em;
    vertical-align: top;
    padding-left: 0.2rem;
    position: relative;
    top: 0.2rem;
  }
  // Changes icon color when .matrix--row is active (on hover)
  .active & {
    color: $beigeDark;
    &.inactive {
      @include opacity(100);
    }
  }
}

// <label>
.matrix--cell--indicator {
  @extend %epsilon;
  height: 3.6rem;
  color: $tealMedium;
  font-weight: $medium;
  padding-top: 2.1rem;
  margin: 0.6rem 0;
  float: left;
  position: relative;
  cursor: pointer;
  b {
    @include svg(checkbox-unchecked);
    display: block;
    width: 1.7rem;
    height: 1.7rem;
    position: absolute;
    top: 0.2rem;
    left: 0;
  }
  &.active {
    b {
      @include svg(checkbox);
    }
  }
  &.inactive {
    @include opacity(25);
  }
  // Changes icon color when .matrix--row is active (on hover)
  .active & {
    color: $beigeDark;
    b {
      @include svg(checkbox-unchecked-beigeDark);
    }
    &.active {
      b {
        @include svg(checkbox-beigeDark);
      }
    }
    &.inactive {
      @include opacity(100);
    }
  }
}

// Overlay
// ------------
.matrix--overlay {
  width: $matrixOverlayWidth + $matrixRowHeaderWidth;
  background-color: $beige;
  position: relative;
  left: 0;
  //  overflow: hidden;
  z-index: 170;
  .shim {
    @extend %shaded-inside-right;
    width: $matrixRowHeaderWidth;
    height: 10000px;
    background-color: $beigeAlt;
    position: absolute;
    bottom: 0;
    left: -$matrixRowHeaderWidth;
  }
}

// Project selector
// ------------
.project-selector {
  @extend %dropdown-container;
  position: absolute;
  top: 5.9rem;
  right: 3.8rem;
}

.project-selector--toggle {
  @extend %dropdown-toggle-teal;
}

.project-selector--dropdown {
  @extend %dropdown-teal;
  @extend %dropdown-right;
}

// Meta nav
// ------------
.matrix--meta-nav--header {
  .matrix--row-header & {
    @extend %shaded-bottom;
    height: 4.8rem;
    background-color: $grayDark;
    padding: 1.4rem 0 1.4rem 1.6rem;
    position: relative;
    .light-radio-label {
      width: auto;
      padding-left: 2.2rem;
      &:first-child {
        padding-right: 1.3rem;
      }
    }
    .highlightable & {
      &:hover {
        background-color: $grayDark;
      }
    }
  }
}

.matrix--meta-nav--row {
  @extend %floated-list;
  height: 4.8rem;
  background-color: $grayDark;
  margin: 0;
}

.matrix--meta-nav--cell {
  @extend %shaded-bottom;
  height: 4.8rem;
  padding: 1.15rem 1.6rem;
  position: relative;
  z-index: 200;
  cursor: auto;
  a {
    text-align: center;
    width: 100%;
  }
}
