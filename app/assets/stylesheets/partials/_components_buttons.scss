@import "variables";
@import "mixins";
@import "patterns";


// Button, Link Patterns and prototypes
//-------------------------------------
%button-text {
  @include font-body;
  font-size: $iota;
  font-weight: $semibold;
}

%proto-button {
  padding: .8em;
  line-height: 1; // Inputs have line-height: normal, so we need to set this here to equalize input and link button heights.
  @extend %button-text;
  @extend %bare-focus;
  @extend %bare-active;
  display: inline-block;
  color: $white !important;
}

// Psuedoelements don't stick to <input>s, so we
// need to remove the right padding in those cases
input%proto-button {
  @extend %reset-input;
}

%icon-button {
  padding-right: 2.6em;
  position: relative;
  &:after {
    content: "";
    display: block;
    padding: 0;
    height: 1.5em;
    width: 1.5em;
    position: absolute;
    top: .55em;
    right: .55em;
  }
}

%primary-button {
  @extend %proto-button;
  background-color: $primaryButtonColor;
  border: 0;
  &:hover, &:focus {
	background-color: $primaryButtonHoverColor;
  }
}

%secondary-button {
  @extend %proto-button;
  background-color: $secondaryButtonColor;
  border: 0;
  &:hover, &:focus {
	background-color: $secondaryButtonColor;
  }
}


%proto-action-link {
  @extend %button-text;
  @extend %bare-focus;
  @extend %bare-active;
  text-decoration: underline;
}

%primary-link {
  @extend %proto-action-link;
  color: $primaryLinkColor;
}

%icon-link {
  position: relative;
  height: 2em;
  line-height: 2em;
  display: inline-block;
}

%icon-link-left {
  @extend %icon-link;
  padding-left: 1.75em;
  &:before {
    font-size: $iota;
    content: "";
    display: block;
    padding: 0;
    height: 1.5em;
    width: 1.5em;
    top: .4em;
    position: absolute;
    left: 0em;
  }
}

%icon-link-right {
  @extend %icon-link;
  padding-right: 1.75em;
  &:after {
    font-size: $iota;
    content: "";
    display: block;
    padding: 0;
    height: 1.5em;
    width: 1.5em;
    top: .4em;
    position: absolute;
    right: 0em;
  }
}


// NB uses ems so font-size can be set on component
%bubble-badge {
  font-weight: $regular;
  font-size: $iota;
  line-height: 1;
  color: $white;
  background-color: $grayMedium;
  padding: 0.3em 0.7em 0.3em;
  margin-bottom: 0.7em;
  position: relative;
  &:after {
    content: "";
    display: block;
    width: 0;
    height: 0;
    border-top: 0.75em solid $grayMedium;
    border-right: 0.666em solid transparent;
    position: absolute;
    left: 0.5em;
    bottom: -0.7em;
  }
}

%bubble-link {
  @extend %bubble-badge;
  &:hover, &:focus {
    &:after {
    }
  }
}





// Buttons should be of a type (primary-button or secondary-button)
// and if they want an icon, they should also have an icon class.
//-----------------------------------------------------------------
.primary-button {
  @extend %primary-button;
}

.secondary-button {
  @extend %secondary-button;
}
.small-button{
  padding: .25em;
}

.new-button {
  @extend %icon-button;
  &:after {
    @include svg(circle-plus-white);
  }
}

.show-button {
  @extend %icon-button;
  &:after {
    @include svg(circle-plus-white);
  }
}

.post-button {
  @extend %icon-button;
  &:after {
    @include svg(airplane-white);
  }
}


// Links
//-----------------------------------------------------------------

.primary-link {
  @extend %primary-link;
}

.header-link {
  @extend %primary-link;
  margin-bottom: $verticalSpaceTight;
}

.back-link {
  @extend %icon-link-left;
  &:before {
    @include svg(circle-left-arrow-teal);
  }
}

.reply-link {
  @extend %icon-link-right;
  &:after {
    @include svg(circle-left-bendy-arrow-teal);
  }
}

.delete-link {
  @extend %icon-link-right;
  &:after {
    @include svg(circle-ex-gray);
  }
}


// Bubbles
//-----------------------------------------------------------------

.bubble {
  @extend %bubble-badge;
}