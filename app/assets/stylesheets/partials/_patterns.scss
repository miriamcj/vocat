// Patterns
// --------

// Really basic utility patterns
// --------------------------------------------------------
%pull-left {
	float: left;
}

%pull-right {
	float: right;
}

%center {
	margin-right: auto;
	margin-left: auto;
}

// Typography
// --------------------------------------------------------
// Hierarchy
// --------------------------
%alpha {
  @include font-size(20.5);
}

%beta {
  @include font-size(19.2);
}

%beta-alt {
  @include font-size(18);
}

%gamma-alt {
  @include font-size(17);
}

%gamma {
  @include font-size(16);
}

%delta {
  @include font-size(13);
}

%epsilon {
  @include font-size(12);
}

%epsilon-caps {
  @include font-size(12);
  font-weight: $medium;
  text-transform: uppercase;
}

%zeta {
  // @include font-size(0.4);
}

// Extra-hierarchy
// Very large & very small type,
// outside the above hierarchy
// Employs SI prefixes
// --------------------------
%giga {
  @include font-size(42.9);
}

%giga-alt {
  @include font-size(41.75);
}

%mega {
  @include font-size(27.4);
}

%deci {
  // @include font-size(0.2);
}

// Block-level
// --------------------------
// Extended by h1-6
%heading {
	margin: 0;
  a {
    @extend %orange-hover;
    display: inline-block;
  }
}

%heading-caps {
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

// Headings
// ------------
%heading-giga {
  @extend %giga;
  @extend %with-teal;
  @include font-head;
  text-transform: uppercase;
  line-height: 1;
}

%heading-beta-alt {
  @extend %beta-alt;
  @extend %heading-caps;
  font-weight: $bold;
  line-height: 1;
}

%heading-epsilon {
  @extend %epsilon;
  @extend %heading-caps;
  font-weight: $medium;
  line-height: 1;
}

// Inline
// --------------------------

// Links
// --------------------------
// https://github.com/h5bp/html5-boilerplate/blob/master/css/main.css#L120
%hidden-text {
	background-color: transparent;
    border: 0;
    overflow: hidden;
    *text-indent: -9999px;
    &:before {
	    content: "";
	    display: block;
	    width: 0;
	    height: 100%;
    }
}

%orange-hover {
  &:hover {
    color: $orange;
  }
}

%bare-focus {
  &:focus {
    outline: none;
  }
}

// Buttons
// --------------------------
%teal-arrow-button {
  @extend %heading-epsilon;
  @include font-body;
  display: inline-block;
  color: $beige;
  background-color: $tealLight;
  padding: 1.4rem 3.9rem 1.1rem 1.4rem;
  border: none;
  border-radius: $radius;
  position: relative;
  &:after {
    @include svg(circle-arrow-right-beige);
    content: "";
    display: block;
    width: 2rem;
    height: 2rem;
    position: absolute;
    top: 0.9rem;
    right: 1.1rem;
  }
}

// NB uses ems so font-size can be set on component
%arrow-link {
  display: inline-block;
  color: $teal;
  padding: 0.4em 2.3em 0.2em 0;
  position: relative;
  &:after {
    content: "";
    display: block;
    width: 1.6em;
    height: 1.6em;
    @include svg(circle-arrow-right-teal);
    position: absolute;
    top: 0;
    right: 0;
  }
  &:hover {
    color: $orange;
    &:after {
      @include svg(circle-arrow-right-orange);
    }
  }
}

// NB uses ems so font-size can be set on component
%speech-bubble {
  @extend %with-light-beige;
  font-weight: $medium;
  line-height: 1;
  background-color: $tealMedium;
  padding: 0.5em 0.8em 0.3em;
  border-radius: $radius;
  margin-bottom: 0.7em;
  position: relative;
  &:after {
    content: "";
    display: block;
    width: 0;
    height: 0;
    border-top: 0.75em solid $tealMedium;
    border-right: 0.666em solid transparent;
    position: absolute;
    left: 0.5em;
    bottom: -0.7em;
  }
  &:hover {
    background-color: $orange;
    &:after {
      border-top-color: $orange;
    }
  }
}

// Lists
// --------------------------
%unstyled-list {
	list-style-type: none;
	padding: 0;
}

%floated-list {
	@extend %clearfix;
	@extend %unstyled-list;
	&>li {
		float: left;
		&>a {
			display: block;
		}
	}
	// &>li + li {
	// 	margin-left: 1em;
	// }
}

%floated-list-right {
  @extend %clearfix;
  @extend %unstyled-list;
  &>li {
    float: right;
    &>a {
      display: block;
    }
  }
  // &>li + li {
  //   margin-right: 1em;
  // }
}

// NB be sure to add the appropriate
// left margin to li + li
%piped-list {
  @extend %floated-list;
  &>li + li {
    position: relative;
    &:before {
      content: "|";
      color: inherit;
      position: absolute;
      top: 0;
      left: -2.2rem;
    }
  }
}

// Inputs
// --------------------------
%white-text-input {
  @extend %alpha;
  @include placeholder($beigeDark);
  @include font-body;
  display: block;
  width: 100%;
  color: $beigeDark;
  padding: 1rem 1.4rem 0.6rem;
  border: none;
  border-radius: $radius;
  margin-bottom: 1.3rem;
  &:focus {
    outline: none;
  }
}

// NB uses ems so checkbox scales with type
// Be sure to declare font-size on label
%square-checkbox {
	@include opacity(0);
	.lt-ie9 & {
		filter: alpha(opacity=100);
	}
	& + b {
    @include svg(checkbox-unchecked);
		display: block;
    width: 1.23em;
    height: 1.23em;
		position: absolute;
    top: -0.15em;
		left: 0;
		.lt-ie9 & {
			display: none;
		}
	}
	&:checked {
		& + b {
      @include svg(checkbox-unchecked);
		}
	}
}

%round-checkbox {
  @include opacity(0);
  .lt-ie9 & {
    filter: alpha(opacity=100);
  }
  & + b {
    @include svg(radio-unchecked-gray);
    display: block;
    width: 1em;
    height: 1em;
    position: absolute;
    top: 0;
    left: 0;
    .lt-ie9 & {
      display: none;
    }
  }
  &:checked {
    & + b {
      @include svg(radio-checked-gray);
    }
  }
}

// <label>
%input-label {
	position: relative;
}

// Dropdowns
// --------------------------
// Only necessary if element doesn't already have positioning
%dropdown-container {
  position: relative;
}

// Extending this is optional
%dropdown-toggle {
  @extend %beta-alt;
  @extend %bare-focus;
  display: inline-block;
  line-height: 1;
  color: $grayLighter;
  background-color: $grayDarker;
  padding: 0.9rem 2.6rem 0.5rem 1.1rem;
  border-radius: $radius 0 0 $radius;
  margin-right:3.8rem;
  position: relative;
  &:before {
    content: "";
    background-color: $grayDarker;
    display: block;
    width: 3.6rem;
    height: 3.2rem;
    border-radius: 0 $radius $radius 0;
    position: absolute;
    top: 0;
    right: -3.8rem;
  }
  &:after {
    @include svg(arrow-down-gray);
    content: "";
    display: block;
    width: 18px;
    height: 9px;
    position: absolute;
    top: 1.3rem;
    right: -2.8rem;
  }
  &:hover,
  .open & {
    color: $orange;
    background-color: $grayDarkest;
    &:before {
      background-color: $grayDarkest;
    }
    &:after {
      @include svg(arrow-down-orange);
    }
  }
}

%dropdown-toggle-dark {
  @extend %dropdown-toggle;
  background-color: $grayDarkest;
  &:before {
    background-color: $grayDarkest;
  }
}

%dropdown {
  display: none;
  min-width: 100%;
  background-color: $grayDarkest;
  padding: 2rem;
  border-radius: $radius * 2;
  margin-top: 2rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 250;
  &:before {
    content: "";
    display: block;
    width: 0;
    height: 0;
    border-right: 1.5rem solid transparent;
    border-left: 1.5rem solid transparent;
    border-bottom: 1.5rem solid $grayDarkest;
    position: absolute;
    top: -1.5rem;
    // TODO adjust
    left: 4rem;
  }
  ul {
    padding: 0;
    margin: 0;
  }
  li + li {
    // TODO refactor this so top & bottom padding are equal
    padding-top: 1.2rem;
    border-top: 0.1rem solid $grayDark;
    margin-top: 1rem;
  }
  a {
    @extend %gamma;
    display: block;
    // TODO is this a good way to force width?
    // Test with many different widths
    white-space: pre;
    line-height: 1;
    // TODO adjust once fonts are real
    // letter-spacing: -0.1em;
    color: $grayLighter;
    small {
      color: $grayDark;
    }
    &:hover,
    &.active {
      color: $orange;
    }
  }
  .open & {
    display: block;
  }
}

// TODO should items be right-aligned?
%dropdown-right {
  @extend %dropdown;
  right: 0;
  left: auto;
  &:before {
    // TODO adjust
    right: 4rem;
    left: auto;
  }
}

// Text colors
// --------------------------
%with-white {
	color: $white;
}

%with-light-beige {
  color: $beigeLight;
}

%with-lighter-gray {
  color: $grayLighter;
}

%with-light-gray {
	color: $grayLight;
}

%with-dark-gray {
	color: $grayDark;
}

%with-teal {
	color: $teal;
}

%with-orange {
	color: $orange;
}

// Component patterns
// --------------------------------------------------------
%centered-tile {
	@extend %center;
	width: 60.8rem;
}

%shaded-top {
  @include box-shadow(
    inset 0 3.2rem 1.6rem -1.6rem transparentize($black, 0.92)
  );
}

// NB this shadow will bleed out on all sides;
// keep calm & mind your z-indexes
%shaded-bottom {
  @include box-shadow(
    0 -1.6rem 1.6rem 3.2rem transparentize($black, 0.92)
  );
}

// NB ditto
%shaded-top-bottom {
  @include box-shadow(
    inset 0 3.2rem 1.6rem -1.6rem transparentize($black, 0.92),
    0 -1.6rem 1.6rem 3.2rem transparentize($black, 0.92)
  );
}

// Avatars
// --------------------------
%round-avatar {
  display: block;
  width: 4.8rem;
  height: 4.8rem;
  border: 0.1rem solid $grayLightest;
  border-radius: 100%;
}

// Frame
// --------------------------
%frame {
  // TODO adjust bottom padding
  padding: 3.4rem 0 2rem;
  position: relative;
  z-index: 110;
  &:nth-child(even) {
    @include full-bleed {
      background-color: $beigeLight;
    }
    background-color: $beigeLight;
  }
}

// Extended by %frame--left & %frame--right
// NB whitespace between the two column elements will display
%frame--column {
  display: inline-block;
  vertical-align: top;
}

%frame--left {
  @extend %frame--column;
  width: 30.7%;
}

%frame--right {
  @extend %frame--column;
  width: 69.3%;
  padding-left: 5rem;
}

// Score list
// --------------------------
%score-list {
  @extend %unstyled-list;
  margin: 0;
  li + li {
    margin-top: 1.2rem;
  }
}

// Extended by %active-criterion & %inactive-criterion
%criterion {
  height: 5rem;
  border-radius: 5rem;
  position: relative;
  overflow: hidden;
}

// NB be sure to add an .indicator element into your markup
// TODO should these transition on hover?
%active-criterion {
  @extend %criterion;
  background-color: $tealLighter;
  .indicator {
    display: block;
    height: 100%;
    background-color: $tealLight;
  }
  &:hover {
    background-color: $orangeLight;
    .indicator {
      background-color: $orange;
    }
  }
}

%inactive-criterion {
  @extend %criterion;
  background-color: $grayLighter;
}

%score--title {
  @extend %beta-alt;
  @extend %with-light-beige;
  font-weight: $medium;
  line-height: 1;
  padding-top: 1.7rem;
  position: absolute;
  top: 0;
  left: 2.7rem;
  small {
    font-weight: $regular;
  }
}

%score--value {
  @extend %giga-alt;
  @extend %with-light-beige;
  @include font-head;
  line-height: 1;
  padding-top: 0.6rem;
  position: absolute;
  top: 0;
  right: 1.7rem;
  small {
    @extend %mega;
    vertical-align: top;
    line-height: 1.1;
    padding-left: 0.2rem;
  }
}



































