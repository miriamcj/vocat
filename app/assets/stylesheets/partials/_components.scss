@import "variables";
@import "mixins";
@import "patterns";

// Grid related
// Group
// This wraps a row of units
// On narrow screens, groups can break to multiple rows
// --------------------------------------------------------
.group {
  @include clearfix;
}

// Special body classes
// --------------------------
body.bg-dark {
  background: $grayDarker;
}



// High level containers
// --------------------------
.container {
  @include vendor-transition($fastTransition, transform, $timing);
  min-width: $minContainerWidth;
  padding-top: $headerHeight;
  position: relative;
  z-index: 100;
  padding: $headerHeight 1.5em 0 1.5em;
  margin: auto;
  overflow-x: hidden;

  //$baikal: 960px;
  //  $ontario: 767px;
  //  $ladoga: 600px;
  //  $vostok: 446px;

}

.page-content {
  @include clearfix;
  position: relative;
  width: 100%;
  max-width: $containerWidth;
  margin-right: auto;
  margin-left: auto;
  margin-top: $headerHeight *  .75;
}


// Page content header
// --------------------------
.page-content--heading {
  @include clearfix;
}

.page-content--heading-buttons, .page-section--heading-buttons {
  display: inline-block;
  float: right;
}


footer.page-footer {
  min-height: 0px;
  background: $white;
  margin-top: $headerHeight;
}

// Page header
// This lives outside container so that its position remains
// fixed when .primary-nav is open. As a result, we have to
// translate it separately when .primary-nav toggles.
// More info: http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/
// --------------------------
.page-header {
  @include transition($fastTransition all $timing);
  // Since IE8 doesn't remove the nav menu responsively, give it a min-width to stop
  // it from resizing
  min-width: $minContainerWidth - $headerUnitWidth;

  height: $headerHeight;
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 300;
  box-shadow: 0 1px 0 0 transparentize($black, 0.97);
  color: $white;
}

.page-header--navigation-wrapper {
  height: $headerHeight;
  z-index: 400;
  background-color: $primaryButtonColor;
  padding: 0 1.5em;
  position: relative;
  margin: auto;
}

.page-header--navigation {
  @include clearfix();
  margin: auto;
  position: relative;
  max-width: $containerWidth;
  a {
    &:hover {
      text-decoration: underline;
      color: $tealLight;
    }
  }

}

.page-header--logo-nav {
  position: absolute;
  width: $headerUnitWidth + $headerUnitPadding;
  margin-right: 30px;
  height: $headerHeight;
  img {
    position: absolute;
    top: $headerHeight / 2 - 9;
    width: $headerUnitWidth;
    vertical-align: middle;
    display: block;
  }
}

.page-shield {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 300;
  height: 100%;
  width: 100%;
}

// Drawer nav and trigger
// --------------------------

.page-header--drawer {
  //  position: relative;
  //  z-index: 500;
  background: $grayDarker;
  z-index: 300;
  position: absolute;
  bottom: 0px;
  width: 100%;
  opacity: .5;
  @include transition(all .25s $timing);
  .drawer-open & {
    opacity: 1;
    @include translateY(100%);
  }
  .drawer--contents {
    @include clearfix;
    margin: 35px auto 15px auto;
    position: relative;
    max-width: $containerWidth;
    text-transform: uppercase;
  }
}

.drawer-nav {
  @extend %unstyled-list;
  li {
    margin-bottom: $fluidUnitPadding;
    @extend %wide-one-fourth;
    @extend %medium-one-half;
    .drawer-nav--column {
      h4 {
        padding-bottom: .5em;
        border-bottom: 1px solid $grayMedium;
        margin-bottom: 1em;
        @extend %label;
        color: $white;

      }
      ul {
        margin-bottom: 0;
        li:last-child {
          margin-bottom: 0;
        }
      }
    }
    ul {
      @extend %unstyled-list;

      li {
        text-transform: none;
        display: block;
        float: none;
        width: auto;
        padding: none;
        padding-left: 0;
        padding-right: 0;
        margin-bottom: 1em;
        a {
          color: $white;
          &:hover {
            color: $tealLight;
          }
        }
      }
    }
  }
}

.drawer-nav--trigger {
  font-size: $eta;
  position: absolute;
  left: $headerUnitWidth + $headerUnitPadding;
  height: $headerHeight;
  cursor: pointer;
  line-height: $headerHeight;
  padding: 0 ($iconSizeMedium * 4) 0 $headerUnitPadding;
  background: $tealDark;
  @include transition($fastTransition background $timing);
  .course-short {
    display: inline;
    @include respond($ontario, 'min') {
      display: none;
    }
  }
  .course-long {
    @include respond($ontario - 1) {
      display: none;
    }
  }
  &:hover, .drawer-open & {
    background: $grayDarker;
  }
  & span::after {
    position: absolute;
    right: $headerUnitPadding;
    @include svg(arrow-down-white);
    content: "";
    width: $iconSizeMedium;
    height: $iconSizeMedium;
    top: $headerHeight / 2 - ($iconSizeMedium / 2);
  }
}



