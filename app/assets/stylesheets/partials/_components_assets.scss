@import "variables";
@import "mixins";
@import "patterns";

// Asset create interface
// --------------------------------------------------------
.page-section .page-section--component.asset-upload {
  padding: 0;
  .asset-uploading {
    padding-bottom: 30px 0;
    text-align: center;
    height: 125px;
    line-height: 125px;
  }
}

.asset-done {
  margin-top: 30px;
  a {
    padding-left: 4em;
    padding-right: 4em;
    text-align: center;
  }
}

.asset-uploading {
  position: relative;
}

.progress-bar {
  height: 1em;
  width: 50%;
  position: absolute;
  left: 25%;
  top: 25px;
  background: $grayMedium;
  .progress-bar--fill {
    height: 1em;
    width: 0%;
    position: absolute;
    background: $grayDark;
  }
}

.asset-upload--column {
  @extend %wide-one-third;
  @extend %page-section-column;
  .asset-upload--two-col & {
    @extend %wide-one-half;
  }
  &.asset-upload--file, &.asset-upload--input, &.asset-upload--target {
    height: 125px;
    text-align: center;
    &:before {
      content: '';
      display: inline-block;
      height: 100%;
      vertical-align: middle;
      margin-right: -.25em;
    }
    .wrapper {
      display: inline-block;
      vertical-align: middle;
    }
  }
  &.asset-upload--input {
    input {
      width: 200px;
    }
  }
  &.asset-upload--target {
    position: relative;
    .wrapper {
      text-align: center;
      a {
        display: block;
        position: relative;
        width: 125px;
        margin: auto;
        padding-top: 75px;
        &:before {
          content: '';
          position: absolute;
          height: 60px;
          width: 60px;
          z-index: 2;
          top: 10%;
          left: 50%;
          margin-left: -30px;
          @include svg(upload-overlay-teal);
        }
      }
      &:before {
        content: 'OR';
        font-weight: bold;
        width: 20px;
        height: 1em;
        margin-top: -.5em;
        position: absolute;
        top: 50%;
        left: -.8em;
      }
      &:after {
        content: 'OR';
        font-weight: bold;
        width: 20px;
        height: 1em;
        margin-top: -.5em;
        position: absolute;
        top: 50%;
        right: -.6em;
        .asset-upload--two-col & {
          content: '';
        }
      }
    }
  }
}

$playerColBg: $grayDarker;
$annotationColBg: $grayDarkest;
$textColor: $grayLightest;


// Asset detail interface
// --------------------------------------------------------
.asset-detail-layout {
  position: relative;
  .col-one.page-section-two-thirds {
    background: $playerColBg;
    padding-right: 0;
    padding-left: 0;
    &:before {
      width: 66.666666%;
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      z-index: -1;
      background-color: $playerColBg;
    }
  }
  .col-two.page-section-one-third {
    background: $annotationColBg;
    padding-left: 0;
    overflow: hidden;
    &:before {
      width: 33.333333%;
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      z-index: -1;
      background-color: $annotationColBg;
    }
  }
}

// Annotations
// --------------------------------------------------------
.annotations-container {
  max-height: 100%;
  .annotations-ul {
    @extend %unstyled-list;
  }
  .annotation {
    font-size: $iota;
    color: $textColor;
    padding: 15px;
    border-left: 4px solid $annotationColBg;
    &.active {
    }
    @include clearfix();
    .annotation-left {
      float: left;
      width: 15%;
      img {
        width: 100%;
      }
    }
    .annotation-right {
      float: right;
      width: 80%;
    }
    .annotation-top {
      @include clearfix()
    }
    &:hover .annotation-utility {
      display: block;
    }
    .annotation-utility {
      display: block;
    }
    .annotation-title {
      font-weight: $bold;
    }
    .annotation-indicators {
      float: right;
    }
  }
  .annotation + .annotation {
    border-top: 1px solid $black;
  }
}


// Annotator UI
// --------------------------------------------------------
$trackHeight: 10px;
.annotator {
  padding-top: 20px;
  width: 100%;
  min-height: 200px;
  .formgrid {
    padding-left: 6%;
    padding-right: 6%;
  }
  .timeline-container {
    position: relative;
    margin-top: 2em;

  }
  .annotation-input {
    height: 75px;
  }
  .time {
    position: absolute;
    right: 0;
    top: -2px;
    width: 8%;
    font-size: $iota;
    color: $white;
    text-align: right;
  }
  .timeline {
    width: 92%;
    height: $trackHeight;
    position: absolute;
    left: 0;
    .track {
      z-index: 1;
      position: absolute;
      width: 100%;
      height: $trackHeight;
      background: $grayLight;
    }
    .buffered {
      position: absolute;
      z-index: 2;
      height: $trackHeight;
      background: $grayMedium;
    }
    .scrubber {
      position: absolute;
      width: 1px;
      height: 10px;
      background: $grayDark;
      z-index: 6;
      span {
        cursor: pointer;
        width: 80px;
        display: inline-block;
        margin: auto;
        right: -40px;
        color: $white;
        font-size: $iota;
        top: -$trackHeight * 3.0;
        text-align: center;
        position: absolute;
        &:after {
          content: '';
          width: 0;
          height: 0;
          position: absolute;
          bottom: -$trackHeight;
          right: 40px - $trackHeight;
          margin-left: -$trackHeight;
          border-left: $trackHeight solid transparent;
          border-right: $trackHeight solid transparent;
          border-top: $trackHeight solid $white;
        }
      }
    }

    .played {
      position: absolute;
      z-index: 3;
      height: $trackHeight;
      background: $grayDark;
    }
    .track-overlay {
      position: absolute;
      width: 100%;
      z-index: 5;
      height: $trackHeight;
      cursor: pointer;
    }
    .marks {
      z-index: 4;
      @extend %unstyled-list;
      li {
        top: $trackHeight;
        position: absolute;
        display: block;
        width: 0;
        height: 0;
        margin-left: -$trackHeight;
        border-left: $trackHeight solid transparent;
        border-right: $trackHeight solid transparent;
        border-bottom: $trackHeight solid $defaultFillColor;
      }
      li.role-evaluator {
        border-bottom: $trackHeight solid $instructorFillColor;
      }
      li.role-administrator {
        border-bottom: $trackHeight solid $instructorFillColor;
      }
      li.role-creator {
        border-bottom: $trackHeight solid $peerFillColor;
      }
      li.role-self {
        border-bottom: $trackHeight solid $selfFillColor;
      }

    }
  }

}


